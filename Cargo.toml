#  workspace configuration
[workspace.package]
edition = "2021"
version = "0.1.0"
authors = ["Shindan awesome team <contact@shindan.io>"]
repository = "https://github.com/shindan-io/scnr"
homepage = 'https://shindan.io/'
license = "Apache 2.0"


# https://doc.rust-lang.org/cargo/reference/workspaces.html

#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------
# 
#                                                 LINTS
#  
#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------

# Lints will work ... in the futur : https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#lints
[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
missing_errors_doc = "allow"

#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------
# 
#                                                 WORKSPACE CRATES
#  
#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------


[workspace]
resolver = "2"

default-members = ["scnr"]

members = [
  # main cli & higher level (batteries included) lib
  "scnr",

  # Core system & features 
  "scnr_core",

  # Plugins
  "scnr_plist",
  "scnr_sqlite",

  # Python module
  "py_scnr",

  # examples
  "examples/use_as_rust_lib",
]

#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------
# 
#                                                 DEPENDENCIES
#  
#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------

[workspace.dependencies]
scnr = { path = "scnr" }
scnr_core = { path = "scnr_core" }
scnr_plist = { path = "scnr_plist" }
scnr_sqlite = { path = "scnr_sqlite" }
py_scnr = { path = "py_scnr" }


# Misc
tokio = { version = "1", features = ["full"] }
thiserror = "2"
anyhow = "1"
tempfile = "3"
time = { version = "0.3", features = ["formatting", "parsing"] }
base64 = "0.22"
flume = "0.11"
clap = { version = "4", features = ["derive", "env"] }
strum = { version = "0.27", features = ["derive"] }
bytes = "1"

# Logging / Tracing / Metrics
pretty_env_logger = "0.5"
tracing = { version = "0.1", features = [
  # https://docs.rs/tracing/latest/tracing/#crate-feature-flags
  "log",
  # "log-always",
] }
tracing-log = "0.2"
log = "0.4"

# Serialisation
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", features = ["preserve_order"] }
serde_yml = "0.0.12"
toml = { version = "0.8" }
quick-xml = { version = "0.37", features = ["serialize"] }
quickxml_to_serde = "0.6"
minidom = "0.16"
csv = "1.3"
plist = "=1.6"                                                  # https://github.com/ebarnard/rust-plist/issues/149

# jq
jaq-core = "2"
jaq-json = { version = "1", features = ["serde_json"] }
jaq-std = "2"

# Databases
rusqlite = { version = "0.34", features = ["bundled"] }

# File system
glob = "0.3"
walkdir = "2"

# Compression
zip = "2.4"
lzma-rs = "0.3"
tar = "0.4"
flate2 = "1.0"

# Tests
test-case = "3.3"
pretty_assertions = "1.4"

# Python

# "abi3-py38" tells pyo3 (and maturin) to build using the stable ABI with minimum Python version 3.8
pyo3 = { version = "0.24", features = [
  "abi3-py38",
  "extension-module",
  "anyhow",
] }


#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------
# 
#                                     COMPILATION PROFILES & OPTIMISATIONS
#  
#  ------------------------------------------------------------------------------------------------------------------
#  ------------------------------------------------------------------------------------------------------------------


[profile.release]
strip = true

[profile.dev.package]
serde.opt-level = 3
serde_json.opt-level = 3
plist.opt-level = 3
